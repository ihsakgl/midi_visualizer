<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{982E5102-5F1B-33F3-A5A9-063B254C8EA1}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>_PyNvCodec</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.8.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">_PyNvCodec.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">_PyNvCodec.cp312-win_amd64</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">_PyNvCodec.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">_PyNvCodec.cp312-win_amd64</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">_PyNvCodec.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">_PyNvCodec.cp312-win_amd64</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">_PyNvCodec.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">_PyNvCodec.cp312-win_amd64</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Users/ihsan/AppData/Local/Programs/Python/Python312/include" /external:I "C:/Users/ihsan/Projects/Synthesia/VPF_build/_deps/pybind11-src/include" /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR="Debug";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <AdditionalUsingDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/lib/x64</AdditionalUsingDirectories>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR=\"Debug\";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\TC\TC_CORE\Debug\TC_CORE.lib;..\TC\Debug\TC.lib;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\libs\python312.lib;..\TC\TC_CORE\Debug\TC_CORE.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\npps.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppig.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppial.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppicc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppidei.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppc.lib;C:\libs\FFmpeg\lib\avfilter-11.lib;C:\libs\FFmpeg\lib\avformat-62.lib;C:\libs\FFmpeg\lib\avcodec-62.lib;C:\libs\FFmpeg\lib\swresample-6.lib;C:\libs\FFmpeg\lib\avutil-60.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/Debug/_PyNvCodec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/Debug/_PyNvCodec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions></AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Users/ihsan/AppData/Local/Programs/Python/Python312/include" /external:I "C:/Users/ihsan/Projects/Synthesia/VPF_build/_deps/pybind11-src/include" /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR="Release";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <AdditionalUsingDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/lib/x64</AdditionalUsingDirectories>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR=\"Release\";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\TC\TC_CORE\Release\TC_CORE.lib;..\TC\Release\TC.lib;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\libs\python312.lib;..\TC\TC_CORE\Release\TC_CORE.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\npps.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppig.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppial.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppicc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppidei.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppc.lib;C:\libs\FFmpeg\lib\avfilter-11.lib;C:\libs\FFmpeg\lib\avformat-62.lib;C:\libs\FFmpeg\lib\avcodec-62.lib;C:\libs\FFmpeg\lib\swresample-6.lib;C:\libs\FFmpeg\lib\avutil-60.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/Release/_PyNvCodec.lib</ImportLibrary>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <ProgramDataBaseFile>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/Release/_PyNvCodec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-LTCG</AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Users/ihsan/AppData/Local/Programs/Python/Python312/include" /external:I "C:/Users/ihsan/Projects/Synthesia/VPF_build/_deps/pybind11-src/include" /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR="MinSizeRel";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <AdditionalUsingDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/lib/x64</AdditionalUsingDirectories>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR=\"MinSizeRel\";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\TC\TC_CORE\MinSizeRel\TC_CORE.lib;..\TC\MinSizeRel\TC.lib;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\libs\python312.lib;..\TC\TC_CORE\MinSizeRel\TC_CORE.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\npps.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppig.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppial.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppicc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppidei.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppc.lib;C:\libs\FFmpeg\lib\avfilter-11.lib;C:\libs\FFmpeg\lib\avformat-62.lib;C:\libs\FFmpeg\lib\avcodec-62.lib;C:\libs\FFmpeg\lib\swresample-6.lib;C:\libs\FFmpeg\lib\avutil-60.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/MinSizeRel/_PyNvCodec.lib</ImportLibrary>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <ProgramDataBaseFile>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/MinSizeRel/_PyNvCodec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-LTCG</AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Users/ihsan/AppData/Local/Programs/Python/Python312/include" /external:I "C:/Users/ihsan/Projects/Synthesia/VPF_build/_deps/pybind11-src/include" /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR="RelWithDebInfo";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <AdditionalUsingDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/lib/x64</AdditionalUsingDirectories>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NOMINMAX;_CRT_SECURE_NO_WARNINGS;HAS_BSF=1;CMAKE_INTDIR=\"RelWithDebInfo\";_PyNvCodec_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\TC_CORE\inc;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\inc;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\TC\third_party;C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC;C:\libs\FFmpeg\include;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\include;C:\Users\ihsan\Projects\Synthesia\VPF_build\_deps\pybind11-src\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\TC\TC_CORE\RelWithDebInfo\TC_CORE.lib;..\TC\RelWithDebInfo\TC.lib;C:\Users\ihsan\AppData\Local\Programs\Python\Python312\libs\python312.lib;..\TC\TC_CORE\RelWithDebInfo\TC_CORE.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\npps.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppig.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppial.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppicc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppidei.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64\nppc.lib;C:\libs\FFmpeg\lib\avfilter-11.lib;C:\libs\FFmpeg\lib\avformat-62.lib;C:\libs\FFmpeg\lib\avcodec-62.lib;C:\libs\FFmpeg\lib\swresample-6.lib;C:\libs\FFmpeg\lib\avutil-60.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/RelWithDebInfo/_PyNvCodec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/RelWithDebInfo/_PyNvCodec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions></AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework/src/PyNvCodec/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework -BC:/Users/ihsan/Projects/Synthesia/VPF_build --check-stamp-file C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent\CMakeLists.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\GNUInstallDirs.cmake;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc\Version.hpp.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework/src/PyNvCodec/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework -BC:/Users/ihsan/Projects/Synthesia/VPF_build --check-stamp-file C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent\CMakeLists.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\GNUInstallDirs.cmake;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc\Version.hpp.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework/src/PyNvCodec/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework -BC:/Users/ihsan/Projects/Synthesia/VPF_build --check-stamp-file C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent\CMakeLists.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\GNUInstallDirs.cmake;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc\Version.hpp.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework/src/PyNvCodec/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/ihsan/Projects/Synthesia/VideoProcessingFramework -BC:/Users/ihsan/Projects/Synthesia/VPF_build --check-stamp-file C:/Users/ihsan/Projects/Synthesia/VPF_build/src/PyNvCodec/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FetchContent\CMakeLists.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\GNUInstallDirs.cmake;C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\inc\Version.hpp.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\ihsan\Projects\Synthesia\VPF_build\src\PyNvCodec\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyBufferUploader.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyCudaBufferDownloader.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyFFMpegDecoder.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyFFMpegDemuxer.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyFrameUploader.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyNvCodec.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyNvDecoder.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PyNvEncoder.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PySurface.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PySurfaceConverter.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PySurfaceDownloader.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PySurfaceRemaper.cpp" />
    <ClCompile Include="C:\Users\ihsan\Projects\Synthesia\VideoProcessingFramework\src\PyNvCodec\src\PySurfaceResizer.cpp" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="C:\Users\ihsan\Projects\Synthesia\VPF_build\ZERO_CHECK.vcxproj">
      <Project>{430DD4BF-312B-3D4B-8A4A-6C0C350A65EE}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC.vcxproj">
      <Project>{14BDD07E-C00B-3500-BE6B-DF0995D4A4FF}</Project>
      <Name>TC</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\ihsan\Projects\Synthesia\VPF_build\src\TC\TC_CORE\TC_CORE.vcxproj">
      <Project>{7B216F14-03BE-335D-A1AA-BF6249721EC0}</Project>
      <Name>TC_CORE</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.8.targets" />
  </ImportGroup>
</Project>